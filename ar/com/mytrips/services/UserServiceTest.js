var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":217,"id":0,"methods":[{"el":21,"sc":5,"sl":17},{"el":43,"sc":5,"sl":28},{"el":45,"sc":5,"sl":45},{"el":54,"sc":5,"sl":47},{"el":67,"sc":5,"sl":56},{"el":81,"sc":5,"sl":69},{"el":96,"sc":5,"sl":83},{"el":108,"sc":5,"sl":98},{"el":121,"sc":5,"sl":110},{"el":133,"sc":5,"sl":123},{"el":145,"sc":5,"sl":135},{"el":156,"sc":5,"sl":147},{"el":169,"sc":5,"sl":158},{"el":187,"sc":5,"sl":171},{"el":201,"sc":5,"sl":189},{"el":216,"sc":5,"sl":203}],"name":"UserServiceTest","sl":15}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_19":{"methods":[{"sl":56}],"name":"when create a user, but there exists a user with the same email, it should throw an exception","pass":true,"statements":[{"sl":58},{"sl":59},{"sl":61},{"sl":64},{"sl":65},{"sl":66}]},"test_21":{"methods":[{"sl":189}],"name":"when update the password for a user, it should update the password","pass":true,"statements":[{"sl":191},{"sl":192},{"sl":193},{"sl":194},{"sl":197},{"sl":200}]},"test_24":{"methods":[{"sl":47}],"name":"when create a user, it should return an user with authorities","pass":true,"statements":[{"sl":49},{"sl":52},{"sl":53}]},"test_30":{"methods":[{"sl":98}],"name":"when fetch a user for email, if the user exists it should return it","pass":true,"statements":[{"sl":100},{"sl":103},{"sl":106},{"sl":107}]},"test_33":{"methods":[{"sl":171}],"name":"when update a profile for a user, it should return an updated profile","pass":true,"statements":[{"sl":173},{"sl":174},{"sl":181},{"sl":184},{"sl":185},{"sl":186}]},"test_40":{"methods":[{"sl":203}],"name":"when update the password for a user, if the current password does not match, it should throw an exception","pass":true,"statements":[{"sl":205},{"sl":206},{"sl":207},{"sl":210},{"sl":213},{"sl":214},{"sl":215}]},"test_43":{"methods":[{"sl":83}],"name":"when get a user for email, if the user exists it should return it","pass":true,"statements":[{"sl":85},{"sl":88},{"sl":91},{"sl":92},{"sl":93},{"sl":94},{"sl":95}]},"test_44":{"methods":[{"sl":110}],"name":"when I search by email, it returns the users that match","pass":true,"statements":[{"sl":112},{"sl":113},{"sl":116},{"sl":119},{"sl":120}]},"test_46":{"methods":[{"sl":69}],"name":"when fetch a user for id, if the user exists it should return it","pass":true,"statements":[{"sl":71},{"sl":74},{"sl":77},{"sl":78},{"sl":79},{"sl":80}]},"test_49":{"methods":[{"sl":147}],"name":"when I search for a nonexistent value, it should return an empty list","pass":true,"statements":[{"sl":149},{"sl":152},{"sl":155}]},"test_5":{"methods":[{"sl":158}],"name":"when get the profile data of the logged in user, it should return it","pass":true,"statements":[{"sl":160},{"sl":163},{"sl":166},{"sl":167},{"sl":168}]},"test_50":{"methods":[{"sl":123}],"name":"when I search by firstName, it returns the users that match","pass":true,"statements":[{"sl":125},{"sl":128},{"sl":131},{"sl":132}]},"test_53":{"methods":[{"sl":135}],"name":"when I search by lastName, it returns the users that match","pass":true,"statements":[{"sl":137},{"sl":140},{"sl":143},{"sl":144}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines
