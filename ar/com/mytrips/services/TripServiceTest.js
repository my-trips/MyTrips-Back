var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":119,"id":24,"methods":[{"el":30,"sc":5,"sl":17},{"el":41,"sc":5,"sl":32},{"el":55,"sc":5,"sl":43},{"el":63,"sc":5,"sl":57},{"el":77,"sc":5,"sl":65},{"el":85,"sc":5,"sl":79},{"el":96,"sc":5,"sl":87},{"el":106,"sc":5,"sl":98},{"el":118,"sc":5,"sl":108}],"name":"TripServiceTest","sl":11}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_0":{"methods":[{"sl":98}],"name":"when delete a trip for a user, but the user is invalid, it should throw an exception","pass":true,"statements":[{"sl":100},{"sl":103},{"sl":104},{"sl":105}]},"test_12":{"methods":[{"sl":108}],"name":"Copy a trip","pass":true,"statements":[{"sl":110},{"sl":112},{"sl":115},{"sl":116},{"sl":117}]},"test_19":{"methods":[{"sl":65}],"name":"when search for all trips for a user, it should return all of them","pass":true,"statements":[{"sl":67},{"sl":70},{"sl":73},{"sl":74},{"sl":75},{"sl":76}]},"test_21":{"methods":[{"sl":87}],"name":"when delete a trip from a user, you should be able to delete it","pass":true,"statements":[{"sl":89},{"sl":92},{"sl":95}]},"test_24":{"methods":[{"sl":43}],"name":"when fetch a trip for id, if the trip exists it should return it","pass":true,"statements":[{"sl":45},{"sl":48},{"sl":51},{"sl":52},{"sl":53},{"sl":54}]},"test_25":{"methods":[{"sl":79}],"name":"when search for all trips for a user, and the user has no trips it should not return nothing.","pass":true,"statements":[{"sl":81},{"sl":84}]},"test_7":{"methods":[{"sl":57}],"name":"when fetch a trip for id, if the trip doesn't exits it shouldn't return it","pass":true,"statements":[{"sl":59},{"sl":62}]},"test_8":{"methods":[{"sl":32}],"name":"when create a trip, it should return a complete trip","pass":true,"statements":[{"sl":34},{"sl":37},{"sl":38},{"sl":39},{"sl":40}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines
