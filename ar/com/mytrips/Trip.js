var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":113,"id":419,"methods":[{"el":14,"sc":5,"sl":14},{"el":16,"sc":5,"sl":16},{"el":17,"sc":5,"sl":17},{"el":19,"sc":5,"sl":19},{"el":20,"sc":5,"sl":20},{"el":27,"sc":5,"sl":22},{"el":33,"sc":5,"sl":29},{"el":34,"sc":5,"sl":34},{"el":48,"sc":5,"sl":37},{"el":55,"sc":5,"sl":50},{"el":62,"sc":5,"sl":57},{"el":68,"sc":5,"sl":64},{"el":72,"sc":5,"sl":70},{"el":76,"sc":5,"sl":74},{"el":80,"sc":5,"sl":78},{"el":84,"sc":5,"sl":82},{"el":89,"sc":5,"sl":86},{"el":95,"sc":5,"sl":91},{"el":100,"sc":5,"sl":97},{"el":104,"sc":5,"sl":102},{"el":107,"sc":5,"sl":105},{"el":112,"sc":5,"sl":109}],"name":"Trip","sl":11}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1":{"methods":[{"sl":50},{"sl":82},{"sl":86}],"name":"when a traveller is added, it should should increase the list of travellers","pass":true,"statements":[{"sl":51},{"sl":54},{"sl":83},{"sl":87},{"sl":88}]},"test_10":{"methods":[{"sl":50},{"sl":82},{"sl":86}],"name":"when add a traveller that already exists, it should throw an exception","pass":true,"statements":[{"sl":51},{"sl":52},{"sl":54},{"sl":83},{"sl":87},{"sl":88}]},"test_11":{"methods":[{"sl":109}],"name":"when update the type of transport between two destinations of a trip, it should return an updated transport","pass":true,"statements":[{"sl":110},{"sl":111}]},"test_13":{"methods":[{"sl":82},{"sl":86},{"sl":109}],"name":"when update an activity for a day, it should return an updated activity","pass":true,"statements":[{"sl":83},{"sl":87},{"sl":88},{"sl":110},{"sl":111}]},"test_14":{"methods":[{"sl":86},{"sl":97},{"sl":109}],"name":"by subtracting days, the previous destination cannot run out of days\n","pass":true,"statements":[{"sl":87},{"sl":88},{"sl":98},{"sl":99},{"sl":110},{"sl":111}]},"test_15":{"methods":[{"sl":14},{"sl":16},{"sl":17},{"sl":37},{"sl":78}],"name":"when a trip is asked for the end date, it should return it.","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":40},{"sl":41},{"sl":42},{"sl":44},{"sl":47},{"sl":79}]},"test_17":{"methods":[{"sl":109}],"name":"when update the arrival and departure dates of a transport between two destinations of a trip, it should return an updated transport","pass":true,"statements":[{"sl":110},{"sl":111}]},"test_18":{"methods":[{"sl":50},{"sl":57},{"sl":82},{"sl":86}],"name":"when a traveller is removed, it should be removed from the list of travellers","pass":true,"statements":[{"sl":51},{"sl":54},{"sl":58},{"sl":61},{"sl":83},{"sl":87},{"sl":88}]},"test_19":{"methods":[{"sl":14},{"sl":16},{"sl":17},{"sl":37},{"sl":82},{"sl":86},{"sl":97}],"name":"when ask a trip if a destination is not the last, and it is not, it should return true.","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":40},{"sl":41},{"sl":42},{"sl":44},{"sl":47},{"sl":83},{"sl":87},{"sl":88},{"sl":98},{"sl":99}]},"test_21":{"methods":[{"sl":82},{"sl":86},{"sl":102},{"sl":105},{"sl":109}],"name":"when search for all trips for a user, it should return all of them","pass":true,"statements":[{"sl":83},{"sl":87},{"sl":88},{"sl":103},{"sl":106},{"sl":110},{"sl":111}]},"test_23":{"methods":[{"sl":86},{"sl":97},{"sl":109}],"name":"when a trip is added a day to one of its destinations, it should return the updated destination","pass":true,"statements":[{"sl":87},{"sl":88},{"sl":98},{"sl":99},{"sl":110},{"sl":111}]},"test_24":{"methods":[{"sl":14},{"sl":16},{"sl":17},{"sl":37},{"sl":82},{"sl":86},{"sl":91}],"name":"when a trip is asked for the total cost, it should return it.","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":40},{"sl":41},{"sl":42},{"sl":44},{"sl":47},{"sl":83},{"sl":87},{"sl":88},{"sl":92},{"sl":93},{"sl":94}]},"test_26":{"methods":[{"sl":14},{"sl":16},{"sl":17},{"sl":37},{"sl":86}],"name":"when a trip is asked for the destinations without origin, it should return it.","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":40},{"sl":41},{"sl":42},{"sl":44},{"sl":47},{"sl":87},{"sl":88}]},"test_27":{"methods":[{"sl":50},{"sl":82},{"sl":86}],"name":"when the owner is added as a traveller, it should throw an exception","pass":true,"statements":[{"sl":51},{"sl":52},{"sl":83},{"sl":87},{"sl":88}]},"test_28":{"methods":[{"sl":57},{"sl":82},{"sl":86}],"name":"when the owner is removed as a traveller, it should throw an exception","pass":true,"statements":[{"sl":58},{"sl":59},{"sl":83},{"sl":87},{"sl":88}]},"test_29":{"methods":[{"sl":14},{"sl":16},{"sl":17},{"sl":37},{"sl":82},{"sl":86}],"name":"when a trip is asked for the first destination, it should return it.","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":40},{"sl":41},{"sl":42},{"sl":44},{"sl":47},{"sl":83},{"sl":87},{"sl":88}]},"test_3":{"methods":[{"sl":82},{"sl":86},{"sl":109}],"name":"when create an activity for a day, it should return the full activity.","pass":true,"statements":[{"sl":83},{"sl":87},{"sl":88},{"sl":110},{"sl":111}]},"test_31":{"methods":[{"sl":14},{"sl":16},{"sl":17},{"sl":37},{"sl":74}],"name":"when a trip is asked for the start date, it should return it.","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":40},{"sl":41},{"sl":42},{"sl":44},{"sl":47},{"sl":75}]},"test_32":{"methods":[{"sl":82},{"sl":86}],"name":"when delete an activity for a day, but the activity is invalid, it should throw an exception","pass":true,"statements":[{"sl":83},{"sl":87},{"sl":88}]},"test_33":{"methods":[{"sl":57},{"sl":82},{"sl":86}],"name":"when removing a traveller that doesn't exist, it should throw an exception","pass":true,"statements":[{"sl":58},{"sl":59},{"sl":83},{"sl":87},{"sl":88}]},"test_35":{"methods":[{"sl":82},{"sl":86},{"sl":102},{"sl":105},{"sl":109}],"name":"when fetch a trip for id, if the trip exists it should return it","pass":true,"statements":[{"sl":83},{"sl":87},{"sl":88},{"sl":103},{"sl":106},{"sl":110},{"sl":111}]},"test_36":{"methods":[{"sl":82},{"sl":86}],"name":"when delete a trip from a user, you should be able to delete it","pass":true,"statements":[{"sl":83},{"sl":87},{"sl":88}]},"test_37":{"methods":[{"sl":82},{"sl":86}],"name":"when a non-owner user removes a traveller, it should throw an exception","pass":true,"statements":[{"sl":83},{"sl":87},{"sl":88}]},"test_39":{"methods":[{"sl":14},{"sl":16},{"sl":17},{"sl":37},{"sl":82},{"sl":86}],"name":"when destinations are added to a trip, it must return the updated trip.","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":40},{"sl":41},{"sl":42},{"sl":44},{"sl":47},{"sl":83},{"sl":87},{"sl":88}]},"test_4":{"methods":[{"sl":86},{"sl":97},{"sl":109}],"name":"hen a trip is subtract a day to one of its destinations, it should return the updated destination","pass":true,"statements":[{"sl":87},{"sl":88},{"sl":98},{"sl":99},{"sl":110},{"sl":111}]},"test_5":{"methods":[{"sl":86},{"sl":97},{"sl":109}],"name":"when adding days, the next destination cannot run out of days","pass":true,"statements":[{"sl":87},{"sl":88},{"sl":98},{"sl":99},{"sl":110},{"sl":111}]},"test_6":{"methods":[{"sl":82},{"sl":86}],"name":"when create a trip, it should return a complete trip","pass":true,"statements":[{"sl":83},{"sl":87},{"sl":88}]},"test_7":{"methods":[{"sl":14},{"sl":16},{"sl":17},{"sl":37},{"sl":64},{"sl":82},{"sl":86}],"name":"when a trip is copied, a new trip with the same configuration is returned","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":40},{"sl":41},{"sl":42},{"sl":44},{"sl":47},{"sl":65},{"sl":66},{"sl":67},{"sl":83},{"sl":87},{"sl":88}]},"test_8":{"methods":[{"sl":14},{"sl":16},{"sl":17},{"sl":37},{"sl":70},{"sl":74},{"sl":78}],"name":"when total days of a trip is requested, it should return the number of days.","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":40},{"sl":41},{"sl":42},{"sl":44},{"sl":47},{"sl":71},{"sl":75},{"sl":79}]},"test_9":{"methods":[{"sl":82},{"sl":86},{"sl":109}],"name":"when delete an activity for a day, but the activity is valid, should be able to delete it","pass":true,"statements":[{"sl":83},{"sl":87},{"sl":88},{"sl":110},{"sl":111}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [19, 31, 7, 15, 26, 39, 24, 8, 29], [], [19, 31, 7, 15, 26, 39, 24, 8, 29], [19, 31, 7, 15, 26, 39, 24, 8, 29], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [19, 31, 7, 15, 26, 39, 24, 8, 29], [19, 31, 7, 15, 26, 39, 24, 8, 29], [19, 31, 7, 15, 26, 39, 24, 8, 29], [19, 31, 7, 15, 26, 39, 24, 8, 29], [19, 31, 7, 15, 26, 39, 24, 8, 29], [19, 31, 7, 15, 26, 39, 24, 8, 29], [], [19, 31, 7, 15, 26, 39, 24, 8, 29], [], [], [19, 31, 7, 15, 26, 39, 24, 8, 29], [], [], [1, 10, 27, 18], [1, 10, 27, 18], [10, 27], [], [1, 10, 18], [], [], [33, 18, 28], [33, 18, 28], [33, 28], [], [18], [], [], [7], [7], [7], [7], [], [], [8], [8], [], [], [31, 8], [31, 8], [], [], [15, 8], [15, 8], [], [], [19, 1, 10, 21, 7, 9, 35, 27, 36, 32, 13, 39, 37, 6, 33, 3, 24, 18, 29, 28], [19, 1, 10, 21, 7, 9, 35, 27, 36, 32, 13, 39, 37, 6, 33, 3, 24, 18, 29, 28], [], [], [19, 1, 10, 21, 7, 9, 35, 27, 26, 36, 32, 5, 13, 39, 23, 37, 4, 6, 33, 3, 24, 18, 14, 29, 28], [19, 1, 10, 21, 7, 9, 35, 27, 26, 36, 32, 5, 13, 39, 23, 37, 4, 6, 33, 3, 24, 18, 14, 29, 28], [19, 1, 10, 21, 7, 9, 35, 27, 26, 36, 32, 5, 13, 39, 23, 37, 4, 6, 33, 3, 24, 18, 14, 29, 28], [], [], [24], [24], [24], [24], [], [], [19, 5, 23, 4, 14], [19, 5, 23, 4, 14], [19, 5, 23, 4, 14], [], [], [21, 35], [21, 35], [], [21, 35], [21, 35], [], [], [11, 21, 9, 35, 5, 13, 23, 4, 3, 17, 14], [11, 21, 9, 35, 5, 13, 23, 4, 3, 17, 14], [11, 21, 9, 35, 5, 13, 23, 4, 3, 17, 14], [], []]
