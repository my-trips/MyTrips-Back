var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":138,"id":625,"methods":[{"el":31,"sc":5,"sl":28},{"el":36,"sc":5,"sl":33},{"el":47,"sc":5,"sl":38},{"el":53,"sc":5,"sl":49},{"el":59,"sc":5,"sl":55},{"el":68,"sc":5,"sl":61},{"el":76,"sc":5,"sl":70},{"el":81,"sc":5,"sl":78},{"el":102,"sc":5,"sl":83},{"el":118,"sc":5,"sl":104},{"el":134,"sc":5,"sl":119}],"name":"TripService","sl":20}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_10":{"methods":[{"sl":38},{"sl":61},{"sl":78},{"sl":83}],"name":"when the owner is removed as a traveller, it should throw an exception","pass":true,"statements":[{"sl":39},{"sl":40},{"sl":41},{"sl":43},{"sl":44},{"sl":45},{"sl":46},{"sl":62},{"sl":65},{"sl":85},{"sl":86},{"sl":87},{"sl":88},{"sl":89},{"sl":90},{"sl":99}]},"test_11":{"methods":[{"sl":38},{"sl":49},{"sl":78},{"sl":83}],"name":"when a trip is copied, a new trip with the same configuration is returned","pass":true,"statements":[{"sl":39},{"sl":40},{"sl":41},{"sl":43},{"sl":44},{"sl":45},{"sl":46},{"sl":50},{"sl":51},{"sl":52},{"sl":85},{"sl":86},{"sl":87},{"sl":88},{"sl":89},{"sl":90},{"sl":99}]},"test_14":{"methods":[{"sl":33},{"sl":38},{"sl":78},{"sl":83},{"sl":104}],"name":"when search for all trips for a user, it should return all of them","pass":true,"statements":[{"sl":34},{"sl":35},{"sl":39},{"sl":40},{"sl":41},{"sl":43},{"sl":44},{"sl":45},{"sl":46},{"sl":85},{"sl":86},{"sl":87},{"sl":88},{"sl":89},{"sl":90},{"sl":99},{"sl":105},{"sl":110},{"sl":111},{"sl":113},{"sl":114}]},"test_19":{"methods":[{"sl":38},{"sl":78},{"sl":83}],"name":"when create a trip, it should return a complete trip","pass":true,"statements":[{"sl":39},{"sl":40},{"sl":41},{"sl":43},{"sl":44},{"sl":45},{"sl":46},{"sl":85}]},"test_20":{"methods":[{"sl":28},{"sl":38},{"sl":78},{"sl":83},{"sl":119}],"name":"when fetch a trip for id, if the trip exists it should return it","pass":true,"statements":[{"sl":29},{"sl":30},{"sl":39},{"sl":40},{"sl":41},{"sl":43},{"sl":44},{"sl":45},{"sl":46},{"sl":85},{"sl":86},{"sl":87},{"sl":88},{"sl":89},{"sl":90},{"sl":99},{"sl":120},{"sl":125},{"sl":126},{"sl":127},{"sl":129},{"sl":130}]},"test_24":{"methods":[{"sl":38},{"sl":55},{"sl":78},{"sl":83}],"name":"when the owner is added as a traveller, it should throw an exception","pass":true,"statements":[{"sl":39},{"sl":40},{"sl":41},{"sl":43},{"sl":44},{"sl":45},{"sl":46},{"sl":56},{"sl":85},{"sl":86},{"sl":87},{"sl":88},{"sl":89},{"sl":90},{"sl":99}]},"test_27":{"methods":[{"sl":38},{"sl":61},{"sl":78},{"sl":83}],"name":"when a non-owner user removes a traveller, it should throw an exception","pass":true,"statements":[{"sl":39},{"sl":40},{"sl":41},{"sl":43},{"sl":44},{"sl":45},{"sl":46},{"sl":62},{"sl":63},{"sl":85},{"sl":86},{"sl":87},{"sl":88},{"sl":89},{"sl":90},{"sl":99}]},"test_29":{"methods":[{"sl":38},{"sl":55},{"sl":78},{"sl":83}],"name":"when a traveller is added, it should should increase the list of travellers","pass":true,"statements":[{"sl":39},{"sl":40},{"sl":41},{"sl":43},{"sl":44},{"sl":45},{"sl":46},{"sl":56},{"sl":57},{"sl":58},{"sl":85},{"sl":86},{"sl":87},{"sl":88},{"sl":89},{"sl":90},{"sl":99}]},"test_3":{"methods":[{"sl":38},{"sl":55},{"sl":61},{"sl":78},{"sl":83}],"name":"when a traveller is removed, it should be removed from the list of travellers","pass":true,"statements":[{"sl":39},{"sl":40},{"sl":41},{"sl":43},{"sl":44},{"sl":45},{"sl":46},{"sl":56},{"sl":57},{"sl":58},{"sl":62},{"sl":65},{"sl":66},{"sl":67},{"sl":85},{"sl":86},{"sl":87},{"sl":88},{"sl":89},{"sl":90},{"sl":99}]},"test_32":{"methods":[{"sl":70}],"name":"when delete a trip for a user, but the user is invalid, it should throw an exception","pass":true,"statements":[{"sl":71},{"sl":72}]},"test_34":{"methods":[{"sl":38},{"sl":55},{"sl":78},{"sl":83}],"name":"when add a traveller that already exists, it should throw an exception","pass":true,"statements":[{"sl":39},{"sl":40},{"sl":41},{"sl":43},{"sl":44},{"sl":45},{"sl":46},{"sl":56},{"sl":57},{"sl":58},{"sl":85},{"sl":86},{"sl":87},{"sl":88},{"sl":89},{"sl":90},{"sl":99}]},"test_4":{"methods":[{"sl":38},{"sl":61},{"sl":78},{"sl":83}],"name":"when removing a traveller that doesn't exist, it should throw an exception","pass":true,"statements":[{"sl":39},{"sl":40},{"sl":41},{"sl":43},{"sl":44},{"sl":45},{"sl":46},{"sl":62},{"sl":65},{"sl":85},{"sl":86},{"sl":87},{"sl":88},{"sl":89},{"sl":90},{"sl":99}]},"test_40":{"methods":[{"sl":33},{"sl":104}],"name":"when search for all trips for a user, and the user has no trips it should not return nothing.","pass":true,"statements":[{"sl":34},{"sl":35},{"sl":105},{"sl":110},{"sl":111},{"sl":113},{"sl":114}]},"test_41":{"methods":[{"sl":28},{"sl":119}],"name":"when fetch a trip for id, if the trip doesn't exits it shouldn't return it","pass":true,"statements":[{"sl":29},{"sl":30},{"sl":120},{"sl":125},{"sl":126},{"sl":127},{"sl":129},{"sl":130}]},"test_8":{"methods":[{"sl":38},{"sl":70},{"sl":78},{"sl":83}],"name":"when delete a trip from a user, you should be able to delete it","pass":true,"statements":[{"sl":39},{"sl":40},{"sl":41},{"sl":43},{"sl":44},{"sl":45},{"sl":46},{"sl":71},{"sl":74},{"sl":75},{"sl":85},{"sl":86},{"sl":87},{"sl":88},{"sl":89},{"sl":90},{"sl":99}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [41, 20], [41, 20], [41, 20], [], [], [40, 14], [40, 14], [40, 14], [], [], [24, 29, 4, 34, 14, 3, 27, 10, 19, 20, 11, 8], [24, 29, 4, 34, 14, 3, 27, 10, 19, 20, 11, 8], [24, 29, 4, 34, 14, 3, 27, 10, 19, 20, 11, 8], [24, 29, 4, 34, 14, 3, 27, 10, 19, 20, 11, 8], [], [24, 29, 4, 34, 14, 3, 27, 10, 19, 20, 11, 8], [24, 29, 4, 34, 14, 3, 27, 10, 19, 20, 11, 8], [24, 29, 4, 34, 14, 3, 27, 10, 19, 20, 11, 8], [24, 29, 4, 34, 14, 3, 27, 10, 19, 20, 11, 8], [], [], [11], [11], [11], [11], [], [], [24, 29, 34, 3], [24, 29, 34, 3], [29, 34, 3], [29, 34, 3], [], [], [4, 3, 27, 10], [4, 3, 27, 10], [27], [], [4, 3, 10], [3], [3], [], [], [32, 8], [32, 8], [32], [], [8], [8], [], [], [24, 29, 4, 34, 14, 3, 27, 10, 19, 20, 11, 8], [], [], [], [], [24, 29, 4, 34, 14, 3, 27, 10, 19, 20, 11, 8], [], [24, 29, 4, 34, 14, 3, 27, 10, 19, 20, 11, 8], [24, 29, 4, 34, 14, 3, 27, 10, 20, 11, 8], [24, 29, 4, 34, 14, 3, 27, 10, 20, 11, 8], [24, 29, 4, 34, 14, 3, 27, 10, 20, 11, 8], [24, 29, 4, 34, 14, 3, 27, 10, 20, 11, 8], [24, 29, 4, 34, 14, 3, 27, 10, 20, 11, 8], [], [], [], [], [], [], [], [], [24, 29, 4, 34, 14, 3, 27, 10, 20, 11, 8], [], [], [], [], [40, 14], [40, 14], [], [], [], [], [40, 14], [40, 14], [], [40, 14], [40, 14], [], [], [], [], [41, 20], [41, 20], [], [], [], [], [41, 20], [41, 20], [41, 20], [], [41, 20], [41, 20], [], [], [], [], [], [], [], []]
