var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":124,"id":619,"methods":[{"el":41,"sc":5,"sl":26},{"el":57,"sc":5,"sl":43},{"el":68,"sc":5,"sl":59},{"el":74,"sc":5,"sl":70},{"el":80,"sc":5,"sl":76},{"el":89,"sc":5,"sl":82},{"el":94,"sc":5,"sl":91},{"el":115,"sc":5,"sl":96},{"el":123,"sc":5,"sl":117}],"name":"TripService","sl":18}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1":{"methods":[{"sl":59},{"sl":76},{"sl":91},{"sl":96}],"name":"when a traveller is added, it should should increase the list of travellers","pass":true,"statements":[{"sl":60},{"sl":61},{"sl":62},{"sl":64},{"sl":65},{"sl":66},{"sl":67},{"sl":77},{"sl":78},{"sl":79},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103},{"sl":112}]},"test_10":{"methods":[{"sl":59},{"sl":76},{"sl":91},{"sl":96}],"name":"when add a traveller that already exists, it should throw an exception","pass":true,"statements":[{"sl":60},{"sl":61},{"sl":62},{"sl":64},{"sl":65},{"sl":66},{"sl":67},{"sl":77},{"sl":78},{"sl":79},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103},{"sl":112}]},"test_18":{"methods":[{"sl":59},{"sl":76},{"sl":82},{"sl":91},{"sl":96}],"name":"when a traveller is removed, it should be removed from the list of travellers","pass":true,"statements":[{"sl":60},{"sl":61},{"sl":62},{"sl":64},{"sl":65},{"sl":66},{"sl":67},{"sl":77},{"sl":78},{"sl":79},{"sl":83},{"sl":86},{"sl":87},{"sl":88},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103},{"sl":112}]},"test_2":{"methods":[{"sl":43}],"name":"when search for all trips for a user, and the user has no trips it should not return nothing.","pass":true,"statements":[{"sl":44},{"sl":45},{"sl":49},{"sl":50},{"sl":52},{"sl":53}]},"test_20":{"methods":[{"sl":26}],"name":"when fetch a trip for id, if the trip doesn't exits it shouldn't return it","pass":true,"statements":[{"sl":27},{"sl":28},{"sl":33},{"sl":34},{"sl":36},{"sl":37}]},"test_21":{"methods":[{"sl":43},{"sl":59},{"sl":91},{"sl":96}],"name":"when search for all trips for a user, it should return all of them","pass":true,"statements":[{"sl":44},{"sl":45},{"sl":49},{"sl":50},{"sl":52},{"sl":53},{"sl":60},{"sl":61},{"sl":62},{"sl":64},{"sl":65},{"sl":66},{"sl":67},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103},{"sl":112}]},"test_22":{"methods":[{"sl":117}],"name":"when delete a trip for a user, but the user is invalid, it should throw an exception","pass":true,"statements":[{"sl":118},{"sl":119}]},"test_27":{"methods":[{"sl":59},{"sl":76},{"sl":91},{"sl":96}],"name":"when the owner is added as a traveller, it should throw an exception","pass":true,"statements":[{"sl":60},{"sl":61},{"sl":62},{"sl":64},{"sl":65},{"sl":66},{"sl":67},{"sl":77},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103},{"sl":112}]},"test_28":{"methods":[{"sl":59},{"sl":82},{"sl":91},{"sl":96}],"name":"when the owner is removed as a traveller, it should throw an exception","pass":true,"statements":[{"sl":60},{"sl":61},{"sl":62},{"sl":64},{"sl":65},{"sl":66},{"sl":67},{"sl":83},{"sl":86},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103},{"sl":112}]},"test_33":{"methods":[{"sl":59},{"sl":82},{"sl":91},{"sl":96}],"name":"when removing a traveller that doesn't exist, it should throw an exception","pass":true,"statements":[{"sl":60},{"sl":61},{"sl":62},{"sl":64},{"sl":65},{"sl":66},{"sl":67},{"sl":83},{"sl":86},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103},{"sl":112}]},"test_35":{"methods":[{"sl":26},{"sl":59},{"sl":91},{"sl":96}],"name":"when fetch a trip for id, if the trip exists it should return it","pass":true,"statements":[{"sl":27},{"sl":28},{"sl":33},{"sl":34},{"sl":36},{"sl":37},{"sl":60},{"sl":61},{"sl":62},{"sl":64},{"sl":65},{"sl":66},{"sl":67},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103},{"sl":112}]},"test_36":{"methods":[{"sl":59},{"sl":91},{"sl":96},{"sl":117}],"name":"when delete a trip from a user, you should be able to delete it","pass":true,"statements":[{"sl":60},{"sl":61},{"sl":62},{"sl":64},{"sl":65},{"sl":66},{"sl":67},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103},{"sl":112},{"sl":118},{"sl":121},{"sl":122}]},"test_37":{"methods":[{"sl":59},{"sl":82},{"sl":91},{"sl":96}],"name":"when a non-owner user removes a traveller, it should throw an exception","pass":true,"statements":[{"sl":60},{"sl":61},{"sl":62},{"sl":64},{"sl":65},{"sl":66},{"sl":67},{"sl":83},{"sl":84},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103},{"sl":112}]},"test_6":{"methods":[{"sl":59},{"sl":91},{"sl":96}],"name":"when create a trip, it should return a complete trip","pass":true,"statements":[{"sl":60},{"sl":61},{"sl":62},{"sl":64},{"sl":65},{"sl":66},{"sl":67},{"sl":98},{"sl":99},{"sl":100}]},"test_7":{"methods":[{"sl":59},{"sl":70},{"sl":91},{"sl":96}],"name":"when a trip is copied, a new trip with the same configuration is returned","pass":true,"statements":[{"sl":60},{"sl":61},{"sl":62},{"sl":64},{"sl":65},{"sl":66},{"sl":67},{"sl":71},{"sl":72},{"sl":73},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103},{"sl":112}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [20, 35], [20, 35], [20, 35], [], [], [], [], [20, 35], [20, 35], [], [20, 35], [20, 35], [], [], [], [], [], [21, 2], [21, 2], [21, 2], [], [], [], [21, 2], [21, 2], [], [21, 2], [21, 2], [], [], [], [], [], [37, 1, 6, 10, 33, 21, 7, 18, 35, 27, 36, 28], [37, 1, 6, 10, 33, 21, 7, 18, 35, 27, 36, 28], [37, 1, 6, 10, 33, 21, 7, 18, 35, 27, 36, 28], [37, 1, 6, 10, 33, 21, 7, 18, 35, 27, 36, 28], [], [37, 1, 6, 10, 33, 21, 7, 18, 35, 27, 36, 28], [37, 1, 6, 10, 33, 21, 7, 18, 35, 27, 36, 28], [37, 1, 6, 10, 33, 21, 7, 18, 35, 27, 36, 28], [37, 1, 6, 10, 33, 21, 7, 18, 35, 27, 36, 28], [], [], [7], [7], [7], [7], [], [], [1, 10, 18, 27], [1, 10, 18, 27], [1, 10, 18], [1, 10, 18], [], [], [37, 33, 18, 28], [37, 33, 18, 28], [37], [], [33, 18, 28], [18], [18], [], [], [37, 1, 6, 10, 33, 21, 7, 18, 35, 27, 36, 28], [], [], [], [], [37, 1, 6, 10, 33, 21, 7, 18, 35, 27, 36, 28], [], [37, 1, 6, 10, 33, 21, 7, 18, 35, 27, 36, 28], [37, 1, 6, 10, 33, 21, 7, 18, 35, 27, 36, 28], [37, 1, 6, 10, 33, 21, 7, 18, 35, 27, 36, 28], [37, 1, 10, 33, 21, 7, 18, 35, 27, 36, 28], [37, 1, 10, 33, 21, 7, 18, 35, 27, 36, 28], [37, 1, 10, 33, 21, 7, 18, 35, 27, 36, 28], [], [], [], [], [], [], [], [], [37, 1, 10, 33, 21, 7, 18, 35, 27, 36, 28], [], [], [], [], [22, 36], [22, 36], [22], [], [36], [36], [], []]
