var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":60,"id":819,"methods":[{"el":20,"sc":5,"sl":18},{"el":24,"sc":5,"sl":22},{"el":28,"sc":5,"sl":26},{"el":40,"sc":5,"sl":30},{"el":45,"sc":5,"sl":42},{"el":50,"sc":5,"sl":47},{"el":59,"sc":5,"sl":52}],"name":"UserService","sl":13}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_19":{"methods":[{"sl":22}],"name":"when fetch a user for id, if the user exists it should return it","pass":true,"statements":[{"sl":23}]},"test_20":{"methods":[{"sl":42}],"name":"when I search by lastName, it returns the users that match","pass":true,"statements":[{"sl":43},{"sl":44}]},"test_29":{"methods":[{"sl":18}],"name":"when get the profile data of the logged in user, it should return it","pass":true,"statements":[{"sl":19}]},"test_34":{"methods":[{"sl":52}],"name":"when update the password for a user, it should update the password","pass":true,"statements":[{"sl":53},{"sl":54},{"sl":57},{"sl":58}]},"test_35":{"methods":[{"sl":26}],"name":"when get a user for email, if the user exists it should return it","pass":true,"statements":[{"sl":27}]},"test_36":{"methods":[{"sl":30}],"name":"when create a user, but there exists a user with the same email, it should throw an exception","pass":true,"statements":[{"sl":31}]},"test_39":{"methods":[{"sl":52}],"name":"when update the password for a user, if the current password does not match, it should throw an exception","pass":true,"statements":[{"sl":53},{"sl":54}]},"test_44":{"methods":[{"sl":47}],"name":"when update a profile for a user, it should return an updated profile","pass":true,"statements":[{"sl":48},{"sl":49}]},"test_45":{"methods":[{"sl":42}],"name":"when fetch a user for email, if the user exists it should return it","pass":true,"statements":[{"sl":43},{"sl":44}]},"test_46":{"methods":[{"sl":42}],"name":"when I search for a nonexistent value, it should return an empty list","pass":true,"statements":[{"sl":43},{"sl":44}]},"test_49":{"methods":[{"sl":42}],"name":"when I search by email, it returns the users that match","pass":true,"statements":[{"sl":43},{"sl":44}]},"test_51":{"methods":[{"sl":42}],"name":"when I search by firstName, it returns the users that match","pass":true,"statements":[{"sl":43},{"sl":44}]},"test_9":{"methods":[{"sl":30}],"name":"when create a user, it should return an user with authorities","pass":true,"statements":[{"sl":31},{"sl":34},{"sl":35},{"sl":36},{"sl":38},{"sl":39}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [29], [29], [], [], [19], [19], [], [], [35], [35], [], [], [36, 9], [36, 9], [], [], [9], [9], [9], [], [9], [9], [], [], [46, 20, 49, 51, 45], [46, 20, 49, 51, 45], [46, 20, 49, 51, 45], [], [], [44], [44], [44], [], [], [39, 34], [39, 34], [39, 34], [], [], [34], [34], [], []]
