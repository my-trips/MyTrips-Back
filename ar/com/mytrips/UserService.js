var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":43,"id":679,"methods":[{"el":17,"sc":5,"sl":15},{"el":21,"sc":5,"sl":19},{"el":25,"sc":5,"sl":23},{"el":37,"sc":5,"sl":27},{"el":42,"sc":5,"sl":39}],"name":"UserService","sl":10}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_12":{"methods":[{"sl":39}],"name":"when I search by email, it returns the users that match","pass":true,"statements":[{"sl":40},{"sl":41}]},"test_17":{"methods":[{"sl":39}],"name":"when I search by lastName, it returns the users that match","pass":true,"statements":[{"sl":40},{"sl":41}]},"test_22":{"methods":[{"sl":39}],"name":"when I search for a nonexistent value, it should return an empty list","pass":true,"statements":[{"sl":40},{"sl":41}]},"test_28":{"methods":[{"sl":39}],"name":"when fetch a user for email, if the user exists it should return it","pass":true,"statements":[{"sl":40},{"sl":41}]},"test_30":{"methods":[{"sl":19}],"name":"when fetch a user for id, if the user exists it should return it","pass":true,"statements":[{"sl":20}]},"test_32":{"methods":[{"sl":39}],"name":"when I search by firstName, it returns the users that match","pass":true,"statements":[{"sl":40},{"sl":41}]},"test_7":{"methods":[{"sl":27}],"name":"when create a user, but there exists a user with the same email, it should throw an exception","pass":true,"statements":[{"sl":28}]},"test_9":{"methods":[{"sl":27}],"name":"when create a user, it should return an user with authorities","pass":true,"statements":[{"sl":28},{"sl":31},{"sl":32},{"sl":33},{"sl":35},{"sl":36}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [30], [30], [], [], [], [], [], [], [7, 9], [7, 9], [], [], [9], [9], [9], [], [9], [9], [], [], [17, 12, 32, 28, 22], [17, 12, 32, 28, 22], [17, 12, 32, 28, 22], [], []]
