var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":49,"id":785,"methods":[{"el":18,"sc":5,"sl":16},{"el":22,"sc":5,"sl":20},{"el":26,"sc":5,"sl":24},{"el":38,"sc":5,"sl":28},{"el":43,"sc":5,"sl":40},{"el":48,"sc":5,"sl":45}],"name":"UserService","sl":11}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_16":{"methods":[{"sl":40}],"name":"when fetch a user for email, if the user exists it should return it","pass":true,"statements":[{"sl":41},{"sl":42}]},"test_30":{"methods":[{"sl":40}],"name":"when I search by email, it returns the users that match","pass":true,"statements":[{"sl":41},{"sl":42}]},"test_32":{"methods":[{"sl":28}],"name":"when create a user, it should return an user with authorities","pass":true,"statements":[{"sl":29},{"sl":32},{"sl":33},{"sl":34},{"sl":36},{"sl":37}]},"test_34":{"methods":[{"sl":24}],"name":"when get a user for email, if the user exists it should return it","pass":true,"statements":[{"sl":25}]},"test_35":{"methods":[{"sl":28}],"name":"when create a user, but there exists a user with the same email, it should throw an exception","pass":true,"statements":[{"sl":29}]},"test_37":{"methods":[{"sl":20}],"name":"when fetch a user for id, if the user exists it should return it","pass":true,"statements":[{"sl":21}]},"test_38":{"methods":[{"sl":40}],"name":"when I search for a nonexistent value, it should return an empty list","pass":true,"statements":[{"sl":41},{"sl":42}]},"test_40":{"methods":[{"sl":40}],"name":"when I search by firstName, it returns the users that match","pass":true,"statements":[{"sl":41},{"sl":42}]},"test_41":{"methods":[{"sl":40}],"name":"when I search by lastName, it returns the users that match","pass":true,"statements":[{"sl":41},{"sl":42}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [37], [37], [], [], [34], [34], [], [], [32, 35], [32, 35], [], [], [32], [32], [32], [], [32], [32], [], [], [40, 16, 30, 38, 41], [40, 16, 30, 38, 41], [40, 16, 30, 38, 41], [], [], [], [], [], [], []]
